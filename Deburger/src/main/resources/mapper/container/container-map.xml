<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deburger.app.office.container.mapper.ContainerMapper">
	
	<!-- 전체 조회 -->
	<select id="selectAllList" resultType="ContainerVO">
			select a.material_number,
			       a.stock_count,
			       a.logistics_id,
			       b.material_classification,
			       b.logistics_safety_stock,
			       b.material_name
			from logistics_stock a
  			  join material b
       			 on a.material_number = b.material_number
       		order by a.material_number
	</select>
	
	<!-- 상세 조회  			and b.disposal_operation = 'N' -->
	<select id="selectContainerInfo" resultType="ContainerVO">
			select distinct
			         a.details_order_number,
			         a.count,
			         a.order_condition,
                     a.in_operation,
                     a.person_id,
			         b.lot,
			     	 b.in_day,
				     b.in_count,
				     b.expiration_limit,
				     c.material_number,
				     c.material_name,
			         d.logistics_id,
			         d.client_id
			from logistics_order_details a
			join logistics_in b
				on a.details_order_number = b.details_order_number
			join material c
				on a.material_number = c.material_number 
			join logistics_order d
				on a.order_number = d.order_number
			where c.material_number = #{materialNumber}
			order by b.expiration_limit
	</select>
	
		<!-- 입고 조회 -->
	<select id="selectAllInList" resultType="ContainerVO">
			select a.order_number,
			        a.note,
			        a.client_id,
			        b.order_condition,
			        b.person_id,
			        b.in_operation,
			        sum(b.count) as sum,
			        c.logistics_id,
			        d.client_name,
			        sum(e.in_count) as inCount
			from logistics_order a
			join logistics_order_details b
			        on a.order_number = b.order_number
			join logistics c
			        on a.logistics_id  = c.logistics_id
			join supplier d
			        on a.client_id = d.client_id
			join logistics_in e
			        on b.details_order_number = e.details_order_number
			where  c.logistics_id = #{logisticsId}
			and b.in_operation = 'f1'        
			group by a.order_number,
			        a.note,
			        a.client_id,
			        b.order_condition,
			        b.person_id,
			        b.in_operation,
			        c.logistics_id,
			        d.client_name
	</select>
	
	<!-- 입고 처리 조회 -->
	<select id="selectInInfoList" resultType="ContainerVO" parameterType="list">
		select  a.details_order_number,
		        a.count,
		        a.unit,
		        a.order_cost,
		        a.person_id,
		        b.order_number,
		        c.logistics_id,
		        c.logistics_name,
		        c.phone as logisticsPhone,
		        d.material_name,
		        e.material_number,
		        f.client_id,
		        f.client_name
		from  logistics_order_details a
		join logistics_order b
		        on a.order_number = b.order_number
		join logistics c
		        on b.logistics_id = c.logistics_id
		join material d
		        on a.material_number = d.material_number
		join company_material e
		         on d.material_number = e.material_number
		join supplier f
		       on e.client_id = f.client_id
		where b.order_number = #{orderNumber}
	</select>
	
	<!-- 입고 처리 Transaction-->
	<insert id="containerInInsert">
		 insert into logistics_in(
			        lot,
			        details_order_number,
			        in_day,
			        in_count,
			        expiration_limit,
			        consumption_limit,
			        manufacture_day,
			        inspection_operation,
			        person_id,
			        logistics_id,
			        material_number
		 )values(
		      'LOT' || LPAD(LOT_SEQ.nextval, '7', '0'), 
		      #{detailsOrderNumber},
		      #{inDay},
		      #{inCount},
	          #{expirationLimit},
	          #{consumptionLimit},
	          #{manufactureDay},
	          #{inspectionOperation},
	          #{personId},
	          #{logisticsId},
	          #{materialNumber}	           
		 )
	</insert>
	
	<update id="logisticsStockin">
		update logistics_stock
		set stock_count = stock_count + #{stockCount}
		where material_number = #{materialNumber}
		and logistics_id = #{logisticsId}
	</update>
	
	<update id="containerInUpdate">
		update logistics_order_details
 		set in_operation = #{inOperation}
 		where details_order_number = #{detailsOrderNumber}
	</update>
	
	
	<!-- 물류 창고 폐기 조회 -->
	<select id="ContainerDeleteInfo" resultType="ContainerVO">
			select distinct
			         a.details_order_number,
			         a.count,
			         a.order_condition,
                     a.in_operation,
                     a.person_id,
			         b.lot,
			     	 b.in_day,
				     b.in_count,
				     c.material_number,
				     c.material_name,
			         d.logistics_id,
			         d.client_id
			from logistics_order_details a
			join logistics_in b
				on a.details_order_number = b.details_order_number
			join material c
				on a.material_number = c.material_number 
			join logistics_order d
				on a.order_number = d.order_number
			where b.lot = #{lot}
	</select>

	
	<!-- 물류 창고 폐기 처리 -->
	<insert id="containerOutInsert" parameterType="ContainerVO">
		insert into logistics_out(
		    logistics_out_number,
		    out_date,
		    logistics_id,
		    out_count,
		    note,
		    out_operation,
		    lot
		)values(
		        'DV' || LPAD(DV_SEQ.nextval, '7', '0'),    
		        #{outDate},  
		        #{logisticsId},
		        #{outCount},
		        #{note},
		        #{outOperation},
		        #{lot}
		)
	</insert>
	
	<update id="containerInupdate">
		update logistics_in
		set out_count = #{outCount},
			disposal_operation = #{disposalOperation}
		where lot = #{lot}
	</update>
	
	<update id="stockDelete">
		update logistics_stock
		set stock_count = stock_count - #{outCount}
		where material_number = #{materialNumber}
		and logistics_id = #{logisticsId}
	</update>
	
	
	<!-- 물류창고 출고 리스트 -->
	<select id="containerOutList">
		select a.order_number,
		        sum(b.count) as count,
		        a.oder_app,
		        c.logistics_id,
		        c.store_name	      
		from store_order a
		join order_details b
		    on a.order_number = b.order_number
		join store c
		    on a.store_number = c.store_number
		where a.oder_app = 'L1'       
		group by a.order_number,
		        a.oder_app,
		        c.logistics_id,
		        c.store_name
		order by a.order_number
	</select>
	
	<!-- 출고 상세 조회-->
	<select id="containerOutListInfo">
		select a.order_details_number,
		        a.material_number,
		        a.order_number,
		        a.count,
		        b.material_name,
		        b.unit,
		        c.store_number,
		        d.store_name,
		        d.phone         
		from order_details a
		join material b
		    on a.material_number = b.material_number
		join store_order c
		    on  a.order_number = c.order_number
		join store d
		    on c.store_number = d.store_number
		where a.order_number = #{orderNumber}
	
	</select>
	
	<select id="containerOutModal">
		select a.lot,
		       a.in_count,
			   a.in_day,
			   b.details_order_number,
			   c.material_number,
			   c.material_name
		from logistics_in a
			join logistics_order_details b
			on a.details_order_number = b.details_order_number
			join material c
			on b.material_number = c.material_number
		where c.material_number = #{materialNumber}		
	</select>

	<insert id="containerOutDB">
		insert into logistics_out(
			    logistics_out_number,
			    out_date,
			    logistics_id,
			    inspection,
			    out_count,
			    lot
		)values(
			   #{logisticsOutNumber},
			   #{outDate},
			   #{logisticsId},
			   #{inspection},
			   #{outCount},
			   #{lot}
		)
	</insert>

	<update id="containerOutUp">
	</update>

	<!-- 출고 프로 시저 -->
	<select id="containerOutprocedure" statementType="CALLABLE"
	parameterType="ContainerVO">
		{
			call logistics_out_p(
				#{pNumber, mode=IN, jdbcType=VARCHAR},
				#{pOutOperation, mode=IN, jdbcType=VARCHAR}				
			)
		}
	</select>
	
	<!-- 로그인 session -->
	<select id="loginSession" resultType="ContainerVO">
				select  a.person_id,
		        a.name,
		        a.email,
		        a.phone,
		        a.area,
		        a.department,
		        a.position,
                b.logistics_name
		from person a
             join logistics b
                on a.area = b.logistics_id
		where a.person_id = #{personId}
	</select>
	

</mapper>