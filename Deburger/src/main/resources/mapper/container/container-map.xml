<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deburger.app.office.container.mapper.ContainerMapper">
	
	<select id="selectAllList" resultType="ContainerVO">
			select distinct
			        a.logistics_id,
			        a.logistics_name,
			        a.person_id,
			        b.stock_number,
			        b.stock_count,
			        b.material_number,
			        c.material_name,
			        c.material_classification,
			        c.logistics_safety_stock,
			        d.person_id,
			        e.inspection_operation
			from logistics a
			join logistics_stock b
			    on a.logistics_id = b.logistics_id
			join material c
			    on b.material_number = c.material_number
			join logistics_order_details d
			    on c.material_number = d.material_number
			join logistics_in e
			    on d.details_order_number = e.details_order_number
			order by b.stock_number
	</select>
	
	<select id="selectContainerInfo" resultType="ContainerVO">
			select distinct
			         a.details_order_number,
			         a.count,
			         a.supplier,
			         b.lot,
			     	 b.in_day,
				     b.in_count,
				     c.material_number,
				     c.material_name,
			         d.logistics_id,
			         d.client_id
			from logistics_order_details a
			join logistics_in b
				on a.details_order_number = b.details_order_number
			join material c
				on a.material_number = c.material_number 
			join logistics_order d
				on a.order_number = d.order_number
			where c.material_number = #{materialNumber}
	</select>
	
	<select id="selectAllInList" resultType="ContainerVO">
		select details_order_number,
	           count,
	           unit,
	           material_number,
	           order_number,
	           supplier,
	           person_id,
	           in_operation,
	           order_cost,
	           order_condition
		from logistics_order_details
		order by details_order_number desc
	</select>
	
	<!-- 물류 창고 폐기 처리 -->
	<insert id="containerOutInsert" parameterType="ContainerVO">
		insert into logistics_out(
		    logistics_out_number,
		    out_date,
		    logistics_id,
		    inspection,
		    out_count,
		    note,
		    out_operation,
		    lot
		)values(
		        'DV' || LPAD(DV_SEQ.nextval, '7', '0'),    
		        #{logisticsOutNumber},  
		        #{logisticsId},
		        #{inspection},
		        #{outCount},
		        #{note},
		        #{outOperation},
		        #{lot}
		)
	</insert>
	
	<update id="containerInupdate">
		update logistics_in
		set in_count = #{container.inCount}
		where lot = #{lot}
	</update>
</mapper>